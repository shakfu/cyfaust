[build-system]
requires = ["setuptools >= 61.0", "cython"]
build-backend = "setuptools.build_meta"


[project]
name = "cyfaust"
version = "0.0.3"
dependencies = []
requires-python = ">= 3.8"
description = "A cython wrapper of the faust interpreter with rtaudio support."
authors = [
  {name = "shakfu", email = "me@example.com"},
]
readme = "README.md"
license = {file = "LICENSE"}
keywords = ["audio", "dsp", "faust", "rtaudio", "cython"]
classifiers = [
  "Development Status :: 3 - Alpha",

  "Intended Audience :: Developers",
  "Topic :: Software Development :: Build Tools",

  "License :: OSI Approved :: MIT License",

  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
]

[project.urls]
Repository = "https://github.com/shakfu/cyfaust.git"
Issues = "https://github.com/shakfu/cyfaust/issues"
Changelog = "https://github.com/shakfu/cyfaust/blob/master/CHANGELOG.md"


[project.optional-dependencies]
build = [
	"wheel",
	"delocate; sys_platform == 'darwin'",
	"auditwheel; sys_platform == 'linux'",
]
test = [
	"pytest",
	"virtualenv",
]

# [project.scripts]
# spam-cli = "cyfaust:main_cli"

[tool.cibuildwheel]
build = [
	# "cp38-macosx_x86_64",
	# "cp39-macosx_x86_64",
	# "cp310-macosx_x86_64",
	"cp311-macosx_x86_64",
	# "cp312-macosx_x86_64",

	# "cp38-macosx_arm64",
	# "cp39-macosx_arm64",
	# "cp310-macosx_arm64",
	"cp311-macosx_arm64",
	# "cp312-macosx_arm64",

	# "cp38-manylinux_x86_64",
	# "cp39-manylinux_x86_64",
	# "cp310-manylinux_x86_64",
	"cp311-manylinux_x86_64",
	# "cp312-manylinux_x86_64",

	# "cp38-manylinux_aarch64",
	# "cp39-manylinux_aarch64",
	# "cp310-manylinux_aarch64",
	"cp311-manylinux_aarch64",
	# "cp312-manylinux_aarch64",
]

skip = []

build-frontend = "default"
config-settings = {}
dependency-versions = "pinned"
environment = {}
environment-pass = []
build-verbosity = 0

before-all = []
before-build = []
repair-wheel-command = ""

test-requires = ["pytest"]
test-command = "make pytest"
test-skip = ""
before-test = ""
test-extras = []

container-engine = "docker"

manylinux-x86_64-image = "manylinux2014"
manylinux-aarch64-image = "manylinux2014"


[tool.cibuildwheel.macos]
before-all = [
	"make setup_faust",
]
archs = ["x86_64", "arm64"]
repair-wheel-command = "delocate-wheel -w wheels -v {wheel}"


[tool.cibuildwheel.linux]
before-all = [
	"yum install -y alsa-lib-devel patchelf",
	# "apt-get install -y libasound2-dev patchelf",
	"make setup_faust",
]
archs = ["x86_64", "aarch64"]
repair-wheel-command = "auditwheel repair -w wheels {wheel}"


